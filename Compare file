import os
import sys

def missing_leaf_folders(folder1, folder2):
    folder1_dirs = set()
    folder2_dirs = set()

    # Collect folders from folder1
    for root, dirs, files in os.walk(folder1):
        if not dirs:  # leaf folder (no subdirectories inside)
            rel_path = os.path.relpath(root, folder1)
            folder1_dirs.add(rel_path)

    # Collect folders from folder2
    for root, dirs, files in os.walk(folder2):
        if not dirs:  # leaf folder (no subdirectories inside)
            rel_path = os.path.relpath(root, folder2)
            folder2_dirs.add(rel_path)

    # Find leaf folders in folder1 missing in folder2
    missing_dirs = folder1_dirs - folder2_dirs
    if missing_dirs:
        print(f"Leaf folders in {folder1} but missing in {folder2}:")
        for folder in sorted(missing_dirs):
            print(os.path.join(folder1, folder))
    else:
        print(f"All leaf folders in {folder1} exist in {folder2}")


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print(f"Usage: python {sys.argv[0]} <folder1> <folder2>")
        sys.exit(1)

    folder1 = sys.argv[1]
    folder2 = sys.argv[2]

    missing_leaf_folders(folder1, folder2)






import os
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin, urlparse
from collections import Counter

# List of Maven URLs to download
URLS = [
    "https://maven.repository.redhat.com/ga/org/optaplanner/optaplanner-bom/7.3.0.Final-redhat-1/",
    "https://maven.repository.redhat.com/ga/org/apache-extras/camel-extra/camel-parent/2.21.0.fuse-710018-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/kie/kie-user-bom-parent/7.3.0.Final-redhat-1/",
    "https://maven.repository.redhat.com/ga/org/jboss/integration-platform/jboss-integration-platform-parent/7.0.0.CR9-redhat-1/",
    "https://maven.repository.redhat.com/ga/org/apache/karaf/karaf/4.2.0.fuse-710024-redhat-00002/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-parent/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/io/fabric8/fabric8-project-bom-fuse-karaf/3.0.11.fuse-710023-redhat-00001/",
    "https://maven.repository.redhat.com/ga/io/hawt/hawtio-bom/2.0.0.fuse-710018-redhat-00002/",
    "https://maven.repository.redhat.com/ga/io/hawt/project/2.0.0.fuse-710018-redhat-00002/",
    "https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/26.0.0.redhat-1/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-rs-extension-providers/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-core/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxrs/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http-undertow/3.1.11.fuse-710022-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema-core/2.2.1.redhat-2/",
    "https://maven.repository.redhat.com/ga/javax/ws/rs/javax.ws.rs-api/2.0.1.redhat-1/",
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-core/2.21.0.fuse-710018-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-undertow/2.21.0.fuse-710018-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema/2.2.1.redhat-2/",
    "https://maven.repository.redhat.com/ga/org/apache/apache/16.0.0.redhat-5/",
    "https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/19.0.0.redhat-1/",
    "https://maven.repository.redhat.com/ga/org/apache/camel/components/2.21.0.fuse-710018-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/slf4j/slf4j-api/1.7.22.redhat-2/",
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-test-blueprint/2.21.0.fuse-710018-redhat-00001/",
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxws/3.1.11.fuse-710022-redhat-00001/"
]

DOWNLOAD_DIR = os.path.expanduser("~/Downloads/maven_all_files")
os.makedirs(DOWNLOAD_DIR, exist_ok=True)
downloaded_files = []

def download_file(url, dest_folder):
    local_filename = os.path.join(dest_folder, os.path.basename(urlparse(url).path))
    if not os.path.exists(local_filename):
        try:
            r = requests.get(url, stream=True, timeout=15)
            r.raise_for_status()
            with open(local_filename, 'wb') as f:
                for chunk in r.iter_content(chunk_size=8192):
                    f.write(chunk)
            print(f"‚¨áÔ∏è  Downloaded {url}")
            downloaded_files.append(local_filename)
        except Exception as e:
            print(f"‚ö†Ô∏è  Failed {url}: {e}")
    return local_filename

def explore_and_download(url, dest_folder, root_url):
    try:
        r = requests.get(url, timeout=10)
        r.raise_for_status()
    except Exception as e:
        print(f"‚ö†Ô∏è Cannot access {url}: {e}")
        return

    soup = BeautifulSoup(r.text, "html.parser")
    links = soup.find_all("a")

    for link in links:
        href = link.get("href")
        if not href or href in ["../", "/"]:
            continue

        full_url = urljoin(url, href)

        # Only follow subfolders inside the root URL
        if not full_url.startswith(root_url):
            continue

        if href.endswith("/"):  # subfolder
            subfolder = os.path.join(dest_folder, href.strip("/"))
            os.makedirs(subfolder, exist_ok=True)
            print(f"\nüìÇ Exploring dependency: {full_url}")
            explore_and_download(full_url, subfolder, root_url)
        else:
            # ‚úÖ Download any file, no filtering
            download_file(full_url, dest_folder)

# Start download for each URL
for root_url in URLS:
    print(f"\nüöÄ Starting full download for {root_url}\n")
    artifact_name = "/".join(urlparse(root_url).path.strip("/").split("/")[2:])
    dest_folder = os.path.join(DOWNLOAD_DIR, artifact_name)
    os.makedirs(dest_folder, exist_ok=True)
    explore_and_download(root_url, dest_folder, root_url)

# Summary
from collections import Counter
file_types = [os.path.splitext(f)[1] for f in downloaded_files]
counter = Counter(file_types)
print("\n‚úÖ Download complete!")
print(f"Total files: {len(downloaded_files)}")
for ext, count in counter.items():
    print(f"  {ext or '[no extension]'}: {count} files")



import os
import sys
import shutil

def copy_missing_leaf_folders(folder1, folder2, folder3):
    folder1_dirs = set()
    folder2_dirs = set()

    # Collect leaf folders from folder1
    for root, dirs, files in os.walk(folder1):
        if not dirs:  # leaf folder
            rel_path = os.path.relpath(root, folder1)
            folder1_dirs.add(rel_path)

    # Collect leaf folders from folder2
    for root, dirs, files in os.walk(folder2):
        if not dirs:  # leaf folder
            rel_path = os.path.relpath(root, folder2)
            folder2_dirs.add(rel_path)

    # Find leaf folders missing in folder2
    missing_dirs = folder1_dirs - folder2_dirs

    if missing_dirs:
        print(f"Copying {len(missing_dirs)} missing leaf folders from {folder1} ‚Üí {folder3}:\n")
        for rel_path in sorted(missing_dirs):
            src_path = os.path.join(folder1, rel_path)
            dest_path = os.path.join(folder3, rel_path)

            # Ensure parent directory exists in repo3
            os.makedirs(os.path.dirname(dest_path), exist_ok=True)

            # Copy folder recursively
            if os.path.exists(dest_path):
                print(f"Skipping (already exists in repo3): {dest_path}")
            else:
                shutil.copytree(src_path, dest_path)
                print(f"Copied: {src_path} ‚Üí {dest_path}")
    else:
        print(f"No missing leaf folders. {folder2} already has all leaf folders from {folder1}.")


if __name__ == "__main__":
    if len(sys.argv) != 4:
        print(f"Usage: python {sys.argv[0]} <folder1> <folder2> <folder3>")
        sys.exit(1)

    folder1 = sys.argv[1]
    folder2 = sys.argv[2]
    folder3 = sys.argv[3]

    copy_missing_leaf_folders(folder1, folder2, folder3)


#!/bin/bash

# Base download directory
BASE_DIR=~/Downloads/maven-deps

# List of Maven repository URLs
URLS=(
    "https://maven.repository.redhat.com/ga/org/optaplanner/optaplanner-bom/7.3.0.Final-redhat-1/"
    "https://maven.repository.redhat.com/ga/org/apache-extras/camel-extra/camel-parent/2.21.0.fuse-710018-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/kie/kie-user-bom-parent/7.3.0.Final-redhat-1/"
    "https://maven.repository.redhat.com/ga/org/jboss/integration-platform/jboss-integration-platform-parent/7.0.0.CR9-redhat-1/"
    "https://maven.repository.redhat.com/ga/org/apache/karaf/karaf/4.2.0.fuse-710024-redhat-00002/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-parent/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/io/fabric8/fabric8-project-bom-fuse-karaf/3.0.11.fuse-710023-redhat-00001/"
    "https://maven.repository.redhat.com/ga/io/hawt/hawtio-bom/2.0.0.fuse-710018-redhat-00002/"
    "https://maven.repository.redhat.com/ga/io/hawt/project/2.0.0.fuse-710018-redhat-00002/"
    "https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/26.0.0.redhat-1/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-rs-extension-providers/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-core/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxrs/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http-undertow/3.1.11.fuse-710022-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema-core/2.2.1.redhat-2/"
    "https://maven.repository.redhat.com/ga/javax/ws/rs/javax.ws.rs-api/2.0.1.redhat-1/"
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-core/2.21.0.fuse-710018-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-undertow/2.21.0.fuse-710018-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema/2.2.1.redhat-2/"
    "https://maven.repository.redhat.com/ga/org/apache/apache/16.0.0.redhat-5/"
    "https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/19.0.0.redhat-1/"
    "https://maven.repository.redhat.com/ga/org/apache/camel/components/2.21.0.fuse-710018-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/slf4j/slf4j-api/1.7.22.redhat-2/"
    "https://maven.repository.redhat.com/ga/org/apache/camel/camel-test-blueprint/2.21.0.fuse-710018-redhat-00001/"
    "https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxws/3.1.11.fuse-710022-redhat-00001/"
)

# File extensions to download
EXTS=("pom" "jar" "md5" "sha1" "sha256" "sha512" "xml" "properties" "txt" "asc")

# Loop through URLs
for url in "${URLS[@]}"; do
    echo "üîç Checking $url"
    
    # Fetch the HTML index
    html=$(curl -s "$url")
    
    # Extract file links
    for ext in "${EXTS[@]}"; do
        links=$(echo "$html" | grep -oE "[a-zA-Z0-9._-]+\.$ext")
        for file in $links; do
            full_url="$url$file"
            target_dir="$BASE_DIR$(echo $url | sed 's#https://maven.repository.redhat.com/ga##')"
            mkdir -p "$target_dir"
            
            echo "‚¨áÔ∏è  Downloading $file"
            curl -s -o "$target_dir/$file" "$full_url"
        done
    done
done

echo "‚úÖ All downloads completed. Files saved in $BASE_DIR"


@echo off
setlocal enabledelayedexpansion

:: Base download directory
set "BASE_DIR=%USERPROFILE%\Downloads\maven-deps"

:: Create base directory
if not exist "%BASE_DIR%" mkdir "%BASE_DIR%"

:: List of Maven repository URLs
set URL[0]=https://maven.repository.redhat.com/ga/org/optaplanner/optaplanner-bom/7.3.0.Final-redhat-1/
set URL[1]=https://maven.repository.redhat.com/ga/org/apache-extras/camel-extra/camel-parent/2.21.0.fuse-710018-redhat-00001/
set URL[2]=https://maven.repository.redhat.com/ga/org/kie/kie-user-bom-parent/7.3.0.Final-redhat-1/
set URL[3]=https://maven.repository.redhat.com/ga/org/jboss/integration-platform/jboss-integration-platform-parent/7.0.0.CR9-redhat-1/
set URL[4]=https://maven.repository.redhat.com/ga/org/apache/karaf/karaf/4.2.0.fuse-710024-redhat-00002/
set URL[5]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-parent/3.1.11.fuse-710022-redhat-00001/
set URL[6]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf/3.1.11.fuse-710022-redhat-00001/
set URL[7]=https://maven.repository.redhat.com/ga/io/fabric8/fabric8-project-bom-fuse-karaf/3.0.11.fuse-710023-redhat-00001/
set URL[8]=https://maven.repository.redhat.com/ga/io/hawt/hawtio-bom/2.0.0.fuse-710018-redhat-00002/
set URL[9]=https://maven.repository.redhat.com/ga/io/hawt/project/2.0.0.fuse-710018-redhat-00002/
set URL[10]=https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/26.0.0.redhat-1/
set URL[11]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-rs-extension-providers/3.1.11.fuse-710022-redhat-00001/
set URL[12]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-core/3.1.11.fuse-710022-redhat-00001/
set URL[13]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxrs/3.1.11.fuse-710022-redhat-00001/
set URL[14]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http/3.1.11.fuse-710022-redhat-00001/
set URL[15]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-transports-http-undertow/3.1.11.fuse-710022-redhat-00001/
set URL[16]=https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema-core/2.2.1.redhat-2/
set URL[17]=https://maven.repository.redhat.com/ga/javax/ws/rs/javax.ws.rs-api/2.0.1.redhat-1/
set URL[18]=https://maven.repository.redhat.com/ga/org/apache/camel/camel-core/2.21.0.fuse-710018-redhat-00001/
set URL[19]=https://maven.repository.redhat.com/ga/org/apache/camel/camel-undertow/2.21.0.fuse-710018-redhat-00001/
set URL[20]=https://maven.repository.redhat.com/ga/org/apache/ws/xmlschema/xmlschema/2.2.1.redhat-2/
set URL[21]=https://maven.repository.redhat.com/ga/org/apache/apache/16.0.0.redhat-5/
set URL[22]=https://maven.repository.redhat.com/ga/org/jboss/jboss-parent/19.0.0.redhat-1/
set URL[23]=https://maven.repository.redhat.com/ga/org/apache/camel/components/2.21.0.fuse-710018-redhat-00001/
set URL[24]=https://maven.repository.redhat.com/ga/org/slf4j/slf4j-api/1.7.22.redhat-2/
set URL[25]=https://maven.repository.redhat.com/ga/org/apache/camel/camel-test-blueprint/2.21.0.fuse-710018-redhat-00001/
set URL[26]=https://maven.repository.redhat.com/ga/org/apache/cxf/cxf-rt-frontend-jaxws/3.1.11.fuse-710022-redhat-00001/

:: File extensions to download
set EXTS=pom jar md5 sha1 sha256 sha512 xml properties txt asc

:: Loop through URLs
set i=0
:loop
if defined URL[%i%] (
    echo üîç Checking !URL[%i%]!
    
    :: Get HTML content and find files
    for /f "delims=" %%h in ('curl -s "!URL[%i%]!"') do set "html=%%h"
    
    :: Loop through extensions
    for %%e in (%EXTS%) do (
        for /f "tokens=1" %%f in ('echo !html! ^| findstr /r "[a-zA-Z0-9._-]*\.%%e"') do (
            echo ‚¨áÔ∏è  Downloading %%f
            curl -s -o "%BASE_DIR%\%%f" "!URL[%i%]!%%f"
        )
    )
    
    set /a i+=1
    goto :loop
)

echo ‚úÖ All downloads completed. Files saved in %BASE_DIR%
dir "%BASE_DIR%" /b | find /c /v "" > nul && echo üìÅ Total files downloaded: 
for /f %%c in ('dir "%BASE_DIR%" /b ^| find /c /v ""') do echo %%c

endlocal



#!/bin/bash

# Base download directory for Windows - fixed path
BASE_DIR="/c/Users/ayadav7/Downloads/maven-deps"

# List of Maven repository URLs
URLS=(
    "https://maven.repository.redhat.com/ga/org/optaplanner/optaplanner-bom/7.3.0.Final-redhat-1/"
)

# File extensions to download
EXTS=("pom" "jar" "md5" "sha1" "sha256" "sha512" "xml" "properties" "txt" "asc")

# Create base directory
mkdir -p "$BASE_DIR"

# Loop through URLs
for url in "${URLS[@]}"; do
    echo "üîç Checking $url"
    
    # Fetch the HTML index
    html=$(curl -s "$url")
    
    # Extract file links
    for ext in "${EXTS[@]}"; do
        links=$(echo "$html" | grep -oE "[a-zA-Z0-9._-]+\.$ext")
        for file in $links; do
            full_url="$url$file"
            
            echo "‚¨áÔ∏è  Downloading $file"
            # Download directly to base directory (no subfolders)
            curl -s -o "$BASE_DIR/$file" "$full_url"
            
            # Check if download was successful
            if [ -f "$BASE_DIR/$file" ]; then
                echo "‚úÖ Downloaded: $file"
            else
                echo "‚ùå Failed to download: $file"
            fi
        done
    done
done

echo "‚úÖ All downloads completed. Files saved in $BASE_DIR"
echo "üìÅ Files downloaded:"
ls -la "$BASE_DIR"
